function TwoRingsEncounterProbability(x,m,t,k,nRing1,nRing2,b)
% calculate the encounter probability between bead m of a Rouse Ring of
% nRing1 beads, and the t bead in a second Rouse ring of nRing2 beads. 
% the two rings are connected in bead k of ring 1 (1<k<nRing1)
varChain = @(m,nChain,b)((b^2)/numel(x))*abs(nChain-m); % variance of the chain 
varRing  = @(t,nRing,b)((t./nRing).*(nRing-(t))*(b^2)/numel(x));% variance of the ring

% pdf of the chain 
fChain=@(x,m,nChain,b) ((1./(2*pi*varChain(m,nChain,b))).^(numel(x)/2)).*exp(-0.5*(x*x')./varChain(m,nChain,b));

% pdf of the ring 
fRing = @(x,t,nRing,b) ((1./(2*pi*varRing(t,nRing,b))).^(numel(x)/2)).*exp(-0.5*(x*x')./varRing(t,nRing,b));

f2Rings=@(x,m,t,nRing1,nRing2,b)((1./(2*pi.*(varRing(m,nRing1,b)+varRing(t,nRing2,b)))).^(numel(x)/2)).*...
    exp(-0.5*(x*x')./(varRing(m,nRing1,b)+varRing(t,nRing2,b)));

f= figure('Units','norm'); 
% a= axes('Parent',f,'NextPlot','Add','XScale','log','YScale','log','FontSize',30);
aScale={'linear','log'};
for n=1:2
a = subplot(1,2,n,'Parent',f,...
                'Units','norm',...
                'NextPlot','Add',...
                'XScale',aScale{n},...
                'YScale',aScale{n},...
                'FontSize',30);
xlabel(a,'Distance [bead]','FontSize',40);
ylabel(a,'Encounter Prob.','FontSize',40);

% s= 1;% (sum(fChain(x,nChain-1:-1:m,nChain,b))+1*sum(fRing(x,t(2:end-1),nRing,b)));
sr1 = sum(fRing([0 0 0],1:nRing1-1,nRing1,b));
sr2 = sum(f2Rings([0 0 0],k,0:nRing2,nRing1,nRing2,b));
fr1 = fRing([0 0 0],1:k,nRing1,b)./(sr1+sr2);
% fr1= fr1./sr;
line('XData',1:k,...
     'YData',fr1,...
     'Color','b',...
     'Marker','o',...
     'MarkerSize',5,...
     'LineWidth',4,...
     'DisplayName','Ring1 encounters',...
     'Parent',a)
 
f2r = f2Rings([0 0 0],k,0:nRing2,nRing1,nRing2,b);
% f2r = f2r./sum(fRing([0 0 0],1:nRing2-1,nRing2,b));
 line('XData',k:k+nRing2,...
     'YData',f2r,...
     'Color','r',...
     'Marker','o',...
     'MarkerSize',5,...
     'LineWidth',4,...
     'DisplayName','Ring2 encounters',...
     'Parent',a);
fr2 = fRing([0 0 0],k:nRing1-1,nRing1,b);
fr2 = fr2./sum(fr2);
% fr2 = fr2./sr;
 line('XData',nRing2+k:nRing1+nRing2-1,...
     'YData',fr2,...
     'Color','b',...
     'Marker','o',...
     'MarkerSize',5,...
     'LineWidth',4,... 
     'HandleVisibility','off',...
     'Parent',a) 
 
% compare with chain encounter probability 
fc = fChain([0 0 0],nRing1+nRing2-1:-1:1,nRing1+nRing2,b);
fc = fc./sum(fc);
% fc= fc./fc(1) *fr1(1);
 line('XData',1:nRing1+nRing2-1,...
     'YData',fc,...
     'Color','m',...
     'Marker','o',...
     'MarkerSize',5,...
     'LineWidth',4,... 
     'DisplayName','Rouse chain',...
     'HandleVisibility','on',...
     'Parent',a) 
 % addition of two chains in reverse order 
 fcc1 = fChain([0 0 0],nRing1+nRing2-1:-1:1,nRing1+nRing2,b);
 fcc2 = fChain([0 0 0],1:nRing1+nRing2-1,nRing1+nRing2,b);
 fcc= fcc1+fcc2;
%  fcc = fcc./sum(fcc);
  line('XData',1:nRing1+nRing2-1,...
     'YData',fcc,...%/fcc(1) *fRing([0 0 0],1,nRing1,b),...
     'Color','g',...
     'Marker','o',...
     'MarkerSize',5,...
     'LineWidth',4,... 
     'DisplayName','2 Rouse chains',...
     'HandleVisibility','on',...
     'Parent',a) 
 
 %  compare addition of two chains to a ring of qual size
 fr = fRing([0 0 0],1:(nRing1+nRing2)-1,nRing1+nRing2,b);
%  fr= fr./sum(fr);
%  fr= fr./(fr(1)) *fcc(1);

 line('XData',1:(nRing1+nRing2)-1,...
     'YData',fr,...
     'Color','c',...
     'Marker','o',...
     'MarkerSize',5,...
     'LineWidth',4,...
     'DisplayName','Ring encounters',...
     'Parent',a)
 
 
legend(get(a,'Children'))


end
% % 
%  line('XData',nChain+t-1,...
%      'YData',fRing(x,t,nRing,b)./sum(fRing(x,t(2:end-1),nRing,b)),...
%      'Color','g',...
%      'Marker','.',...
%      'DisplayName','Chain',...
%      'Parent',a)
%  totalPts = [fChain(x,nChain-1:-1:m,nChain,b) fRC(x,m,t,nChain,nRing,b)];
%  hold on , plot(totalPts,'m')
%  c= conv([fChain(x,m:nChain-1,nChain,b)],[fRing(x,t,nRing,b)]);
 